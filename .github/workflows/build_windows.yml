jobs:
  build_installer:
    runs-on: windows-latest
    outputs:
      installer-file-name: ${{ steps.get-installer-filename.outputs.installer-file-name }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: sagnik3788/demo-pvt
        ref: ${{ inputs.ref }}

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~\AppData\Local\pip\Cache
        key: windows-pip-${{ hashFiles('setup.py', 'build_requires.txt', 'build_windows.yml') }}

    - name: Install dependencies
      run: make dependencies

    - name: Install WebView2
      run: |
        $webview2 = Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\EdgeUpdate\Clients\*" -ErrorAction SilentlyContinue
        if ($null -eq $webview2) {
          Write-Host "WebView2 not found. Installing..."
          Invoke-WebRequest -Uri 'https://go.microsoft.com/fwlink/p/?LinkId=2124703' -OutFile 'WebView2Setup.exe'
          Start-Process -FilePath 'WebView2Setup.exe' -ArgumentList '/silent', '/install' -NoNewWindow -Wait
          Remove-Item -Force WebView2Setup.exe
          Write-Host "WebView2 installed successfully."
        } else {
          Write-Host "WebView2 is already installed."
        }

    - name: Download the whl file from URL and install
      if: ${{ inputs.whl-url }}
      run: make get-whl whl=${{ inputs.whl-url }}

    - name: Download the whl file from artifacts
      if: ${{ inputs.whl-file-name }}
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.whl-file-name }}
        path: whl

    - name: Install WHL file from artifacts
      if: ${{ inputs.whl-file-name }}
      run: make install-whl whl=whl/${{ inputs.whl-file-name }}

    - name: Build the Windows installer
      run: make build-windows-installer

    - name: Sign the installer
      if: ${{ inputs.release }}
      run: |
        signtool sign /f "${{ secrets.KOLIBRI_WINDOWS_CERTIFICATE }}" /p "${{ secrets.KOLIBRI_WINDOWS_CERTIFICATE_PASSWORD }}" /t http://timestamp.digicert.com dist/*.exe

    - name: Get installer filename
      id: get-installer-filename
      shell: pwsh
      run: |
        $installerFile = Get-ChildItem -Path dist -Filter "*.exe" | Select-Object -ExpandProperty Name
        echo "installer-file-name=$installerFile" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.get-installer-filename.outputs.installer-file-name }}
        path: dist/${{ steps.get-installer-filename.outputs.installer-file-name }}
